[circus]
check_delay = 5
endpoint = {{ endpoint }}
pubsub_endpoint = {{ pubsub_endpoint }}
umask = 002
logoutput = {{  parts.buildout.directory }}/var/log/circus.log
{% if httpd is defined and httpd %}
httpd = 1
httpd_host = {{ httpd_host }}
httpd_port = {{ httpd_port }}
{% endif %}
statsd = {{ statsd }}

{% if couchdb %}
[watcher:db]
cmd = couchdb
args = -a {{  parts.buildout.directory }}/etc/couchdb.ini
priority = 100
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/couchdb.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/couchdb.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}

[env:db]
HOME = {{  parts.buildout.directory }}/var

[plugin:db_http]
use = circus.plugins.http_observer.HttpObserver
restart_on_error = db
check_url = http://{{  parts['couchdb.ini'].host }}:{{  parts['couchdb.ini'].port }}/
{% endif %}

{% if concord %}
[watcher:concord]
cmd = {{  parts.buildout.directory }}/bin/concord
warmup_delay = 10
priority = 10
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/concord.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/concord.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}
{% endif %}

[env]
TZ = {{ timezone }}
{% if sandbox_mode is defined %}
SANDBOX_MODE = true
{% endif %}

{% if webapp %}
[watcher:webapp]
cmd = {{  parts.buildout.directory }}/bin/chaussette --fd $(circus.sockets.web) --backend=gevent paste:{{  parts.buildout.directory }}/{{  parts['openprocurement.api.ini']['target-file'] }} --graceful-timeout={{ graceful_timeout if 'graceful_timeout' in options else '60' }}
numprocesses = {{ numprocesses if 'numprocesses' in options else '1'}}
use_sockets = True
priority = 90
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/webapp.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/webapp.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}

{% if migration_skip is defined %}
[env:webapp]
MIGRATION_SKIP = True
{% endif %}

[socket:web]
host = {{ web_host }}
port = {{ web_port }}

[plugin:webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 95
max_mem = 400M
{% endif %}

{% if webapp and webapp2 is defined and webapp2 %}
[watcher:webapp2]
cmd = {{  parts.buildout.directory }}/bin/chaussette --fd $(circus.sockets.web) --backend=gevent paste:{{  parts.buildout.directory }}/{{  parts['openprocurement.api.ini']['target-file'] }} --graceful-timeout={{ graceful_timeout if 'graceful_timeout' in options else '60'}}
numprocesses = {{ numprocesses if 'numprocesses' in options else '1'}}
use_sockets = True
warmup_delay = 10
priority = 80
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/webapp.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/webapp.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}

{% if migration_skip is defined %}
[env:webapp2]
MIGRATION_SKIP = True
{% endif %}

[plugin:webapp2_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp2
max_cpu = 95
max_mem = 400M
{% endif %}

{% if contracting_data_bridge %}
[watcher:contracting_data_bridge]
cmd = {{  parts.buildout.directory }}/bin/contracting_data_bridge
args = {{  parts.buildout.directory }}/etc/contracting_data_bridge.yaml
shell = True
copy_env = True
stdout_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/contracting_data_bridge.stdout.log
stdout_stream.max_bytes = 134217728
stdout_stream.backup_count = 1
stderr_stream.class = FileStream
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/contracting_data_bridge.stderr.log
stderr_stream.max_bytes = 134217728
stderr_stream.backup_count = 1
{% endif %}

{% if competitive_dialogue_data_bridge %}
[watcher:competitive_dialogue_data_bridge]
cmd = {{  parts.buildout.directory }}/bin/competitive_dialogue_data_bridge
args = {{  parts.buildout.directory }}/etc/competitive_dialogue_data_bridge.yaml
shell = True
copy_env = True
stdout_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/competitive_dialogue_data_bridge.stdout.log
stdout_stream.max_bytes = 134217728
stdout_stream.backup_count = 1
stderr_stream.class = FileStream
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/competitive_dialogue_data_bridge.stderr.log
stderr_stream.max_bytes = 134217728
stderr_stream.backup_count = 1
{% endif %}

{% if chronograph %}
[watcher:chronograph]
cmd = {{'consul lock ' + chronograph_consul_lock + ' ' if chronograph_consul_lock != '' else ' '}}{{  parts.buildout.directory }}/bin/chaussette --fd $(circus.sockets.chronograph) --backend=gevent paste:{{  parts.buildout.directory }}/{{  parts['chronograph.ini']['target-file'] }} --graceful-timeout=60
numprocesses = 1
use_sockets = True
priority = 30
warmup_delay = 5
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/chronograph.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/chronograph.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}

[socket:chronograph]
host = {{ chronograph_host }}
port = {{ chronograph_port }}
{% endif %}

{% if flapping is defined and flapping %}
[plugin:flapping]
use = circus.plugins.flapping.Flapping
max_retry = 5
{% endif %}

{% if penstock %}
[watcher:penstock]
cmd = {{  parts.buildout.directory }}/bin/penstock {{  parts.buildout.directory }}/etc/penstock.yaml
numprocesses = 1
priority = 50
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/penstock.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/penstock.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}
{% endif %}

{% if vaurien %}
[watcher:vaurien]
cmd = {{  parts.buildout.directory }}/bin/vaurien  --config {{  parts.buildout.directory }}/etc/vaurien.ini --http  --http-host {{ vaurien_http_host }} --http-port {{ vaurien_http_port }}
numprocesses = 1
priority = 50
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = {{  parts.buildout.directory }}/var/log/vaurien.stdout.log
stderr_stream.filename = {{  parts.buildout.directory }}/var/log/vaurien.stderr.log
{% if log_size is defined %}
stdout_stream.max_bytes = {{ log_size }}
stderr_stream.max_bytes = {{ log_size }}
{% endif %}
{% if backup_count is defined %}
stdout_stream.backup_count = {{ backup_count }}
stderr_stream.backup_count = {{ backup_count }}
{% endif %}
{% endif %}
